{"ast":null,"code":"var _jsxFileName = \"/home/carolina/notas_original/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Note from './Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = props => {\n  _s();\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState('A new note');\n  //Método donde se indica cuando se aplane el boton   \n  const addNote = event => {\n    event.preventDefault();\n    //console.log('button clicked', event.target);\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      //Sacamos la fecha del sistema y lo metemos en un metodo\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote('');\n  };\n  const handleNoteChange = event => {\n    //console.log(event.target.value)\n    setNewNote(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(x => {\n        console.log(x.id, x.content);\n        return /*#__PURE__*/_jsxDEV(Note, {\n          note: x\n        }, x.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"nJAM28lerHzuRDomQV6juRmSTc8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Note","App","props","notes","setNotes","newNote","setNewNote","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","id","length","concat","handleNoteChange","target","value","map","x","console","log"],"sources":["/home/carolina/notas_original/src/components/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport Note from './Note';\n\n\n\nconst App = (props) => {\n    const [notes, setNotes] = useState(props.notes)\n    const [newNote, setNewNote] = useState('A new note')\n    //Método donde se indica cuando se aplane el boton   \n    const addNote = (event) => {\n      event.preventDefault()\n      //console.log('button clicked', event.target);\n      const noteObject = {\n        content: newNote,\n        date: new Date().toISOString(), //Sacamos la fecha del sistema y lo metemos en un metodo\n        important: Math.random()<0.5,\n        id: notes.length+1\n\n      }\n      setNotes(notes.concat(noteObject));\n      setNewNote('')\n    }\n    const handleNoteChange = (event) => {\n      //console.log(event.target.value)\n      setNewNote(event.target.value)\n    }\n    return (\n      <div>\n        <h1>Notes</h1>\n        <ul>\n          {notes.map(x=>{\n            console.log(x.id, x.content);\n            return (\n          <Note key= {x.id} note={x} />\n            )\n        })}\n        </ul>\n        <form onSubmit={addNote}>\n          <input value={newNote} onChange={handleNoteChange}/>\n          <button type='submit'> Save</button>\n        </form>\n      </div>\n    )\n  }\n\n\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAI1B,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACG,KAAK,CAACC,KAAK,CAAC;EAC/C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,YAAY,CAAC;EACpD;EACA,MAAMQ,OAAO,GAAIC,KAAK,IAAK;IACzBA,KAAK,CAACC,cAAc,EAAE;IACtB;IACA,MAAMC,UAAU,GAAG;MACjBC,OAAO,EAAEN,OAAO;MAChBO,IAAI,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;MAAE;MAChCC,SAAS,EAAEC,IAAI,CAACC,MAAM,EAAE,GAAC,GAAG;MAC5BC,EAAE,EAAEf,KAAK,CAACgB,MAAM,GAAC;IAEnB,CAAC;IACDf,QAAQ,CAACD,KAAK,CAACiB,MAAM,CAACV,UAAU,CAAC,CAAC;IAClCJ,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EACD,MAAMe,gBAAgB,GAAIb,KAAK,IAAK;IAClC;IACAF,UAAU,CAACE,KAAK,CAACc,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EACD,oBACE;IAAA,wBACE;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACd;MAAA,UACGpB,KAAK,CAACqB,GAAG,CAACC,CAAC,IAAE;QACZC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACP,EAAE,EAAEO,CAAC,CAACd,OAAO,CAAC;QAC5B,oBACF,QAAC,IAAI;UAAa,IAAI,EAAEc;QAAE,GAAdA,CAAC,CAACP,EAAE;UAAA;UAAA;UAAA;QAAA,QAAa;MAE/B,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACG,eACL;MAAM,QAAQ,EAAEX,OAAQ;MAAA,wBACtB;QAAO,KAAK,EAAEF,OAAQ;QAAC,QAAQ,EAAEgB;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAE,eACpD;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAA,GAtCGpB,GAAG;AAAA,KAAHA,GAAG;AA0CT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}