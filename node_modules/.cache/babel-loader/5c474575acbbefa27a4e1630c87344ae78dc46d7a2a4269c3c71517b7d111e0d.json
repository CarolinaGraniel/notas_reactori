{"ast":null,"code":"var _jsxFileName = \"/home/carolina/notas_original/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Note from './Note';\nimport noteService from '../services/notes';\nimport Notification from \"./Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('A new note');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    noteService.getAll().then(response => {\n      setNotes(response);\n    });\n  }, []);\n  console.log('render', notes.length, 'notes');\n\n  //Método donde se indica cuando se aplane el boton   \n  const addNote = event => {\n    event.preventDefault();\n    //console.log('button clicked', event.target);\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      //Sacamos la fecha del sistema y lo metemos en un metodo\n      important: Math.random() < 0.5\n    };\n    noteService.create(noteObject).then(response => {\n      setNotes(notes.concat(response));\n      setNewNote('');\n    });\n  };\n  const handleNoteChange = event => {\n    //console.log(event.target.value)\n    setNewNote(event.target.value);\n  };\n  const notesToShow = showAll ? notes : notes.filter(x => x.important === true);\n\n  //post insertar, put actualizar y get agregar\n  const updateImportance = id => {\n    const note = notes.find(x => x.id === id);\n    const note2 = {\n      ...note,\n      important: !note.important\n    };\n    noteService.update(id, note2).then(response => {\n      setNotes(notes.map(x => x.id !== id ? x : response));\n    }).catch(error => {\n      alert(`the note ${note2.content} was already delete from`);\n      setNotes(notes.filter(x => x.id !== id));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAll(!showAll),\n      children: [\"show \", showAll ? 'important' : 'all']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(x => {\n        console.log(x.id, x.content);\n        return /*#__PURE__*/_jsxDEV(Note, {\n          note: x,\n          updateImportance: () => updateImportance(x.id)\n        }, x.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"oUQzu74NPSvQSsaDiv6X6+hDuWk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Note","noteService","Notification","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","getAll","then","response","console","log","length","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","create","concat","handleNoteChange","target","value","notesToShow","filter","x","updateImportance","id","note","find","note2","update","map","catch","error","alert"],"sources":["/home/carolina/notas_original/src/components/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Note from './Note';\nimport noteService from '../services/notes';\nimport Notification from \"./Notification\";\n\n\n\nconst App = () => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('A new note')\n    const [showAll, setShowAll]= useState(true)\n     useEffect(()=> {\n     noteService\n     .getAll()\n      .then(response => {\n        setNotes(response)\n      })\n     \n     },[])\n     \n     console.log('render',notes.length, 'notes');\n\n\n    //Método donde se indica cuando se aplane el boton   \n    const addNote = (event) => {\n      event.preventDefault()\n      //console.log('button clicked', event.target);\n      const noteObject = {\n        content: newNote,\n        date: new Date().toISOString(), //Sacamos la fecha del sistema y lo metemos en un metodo\n        important: Math.random()<0.5\n        \n\n      }\n\n      noteService\n      .create(noteObject)\n      .then(response=> {\n        setNotes(notes.concat(response))\n        setNewNote('')\n      })\n     \n\n      \n    }\n    const handleNoteChange = (event) => {\n      //console.log(event.target.value)\n      setNewNote(event.target.value)\n    }\n    const notesToShow = showAll ? \n     notes : notes.filter(x => x.important=== true) \n\n//post insertar, put actualizar y get agregar\n     const updateImportance = (id) =>{\n\n        \n         const note = notes.find(x => x.id === id)\n         const note2 = {...note, important: !note.important}\n         noteService\n         .update(id,note2)\n         .then(response =>{\n          setNotes(notes.map(x => x.id!==id? x: response))\n         })\n         .catch(error => {\n          alert(`the note ${note2.content} was already delete from`)\n          setNotes(notes.filter(x => x.id !== id))\n          \n     })\n    }\n    return (\n      <div>\n        <h1>Notes</h1>\n        \n        <button onClick={()=> setShowAll(!showAll)}> \n          show {showAll? 'important' : 'all'}\n\n        </button>\n        <ul>\n          {notesToShow.map(x=>{\n            console.log(x.id, x.content);\n            return (\n          <Note key= {x.id} \n          note={x}\n          updateImportance = {()=>updateImportance(x.id)} />\n            )\n        })}\n        </ul>\n        <form onSubmit={addNote}>\n          <input value={newNote} onChange={handleNoteChange}/>\n          <button type='submit'> Save</button>\n        </form>\n      </div>\n    )\n  }\n\n\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}